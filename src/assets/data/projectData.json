[
  {
    "projectCodeUrl": "https://github.com/tonylubin/music-library",
    "projectViewUrl": "https://my-vinyl-library.vercel.app",
    "title": "The Vinyl Lib.",
    "info": "A full stack desktop app for organizing & playing your music catalogue, similar to itunes. Digitized my vinyl records then upload audio & record cover image using Cloudinary API. React hook form for storing track details in a postgresql database. Built an audio player with an EQ analyzer. Search functionality and ability to create playlists. Tested using React Testing Library and Playwright. ***DUE TO BUG WITH SAFARI BROWSER, PLEASE USE CHROME BROWSER***",
    "imageUrl": "/images/music-player-screenshot.png",
    "imageAlt": "Screenshot of a webscraping app called the vinyl library",
    "isReversed": false,
    "techstackIcons": ["nextjs", "tailwind", "postgresql"] 
  },
  {
    "projectCodeUrl": "https://github.com/tonylubin/beer-finder",
    "projectViewUrl": "https://find-me-a-beer.vercel.app/",
    "title": "BrewDog Beer Finder",
    "info": "A project built with NEXTJS that allows the user to search Brewdog's beers catalogue, by letter/name or filter functionality. Designed mobile-first, with the results shown to the user as a flipable 'beer card', with extra info about the beer on the back of the card. Reworked Punk API into a NoSQL database for data fetching by building aggregation pipeline via url search query. Tested using vitest and playwright.",
    "imageUrl": "/images/Beer-finder-laptop-screenshot.png",
    "imageAlt": "Screenshot of a beer finder app using BrewDogs punk beers Api",
    "isReversed": true,
    "techstackIcons": ["nextjs", "sass", "mongodb"]
  },
  {
    "projectCodeUrl": "https://github.com/tonylubin/webscraper---node-js.git",
    "projectViewUrl": null,
    "title": "Money Saver App",
    "info": "An web scraping app, using an automated browser tool(Puppeteer), that allows a user to set up a price alert for a product from the retailer Sainsbury's. Written entirely for the back-end in Node js with the server built on Express. Styled with Bootstrap and html pages server-side rendered with EJS. Alerts are stored in a MongoDb Database & ODM modelled with Mongoose. App is tasked scheduled (cron job) to run and sends a user an email when the product is cheaper.",
    "imageUrl": "/images/Money-saver-laptop-screenshot.png",
    "imageAlt": "Screenshot of a webscraping app called Money saver app",
    "isReversed": false,
    "techstackIcons": ["nodejs", "express", "mongodb", "puppeteer", "bootstrap"] 
  },
  {
    "projectCodeUrl": "https://github.com/tonylubin/space_tourism",
    "projectViewUrl": "https://tonylubin.github.io/space_tourism",
    "title": "Space Tourism",
    "info": "A Frontend Mentor challenge to build out a multi-page website from Figma designs with a mobile-first approach for various screen sizes. Built with React and using react-router for navigation, which includes nested routing. Adopted BEM practice, along with Sass and CSS modules for styling, and pulling in data from a local json file.",
    "imageUrl": "/images/Space-tourism-laptop-screenshot.png",
    "imageAlt": "Screenshot of space tourism website example",
    "isReversed": true,
    "techstackIcons": ["react", "sass"]
  },
  {
    "projectCodeUrl": "https://github.com/tonylubin/JS---Quiz-Game.git",
    "projectViewUrl": "https://tonylubin.github.io/JS---Quiz-Game",
    "title": "Spin a Fortune",
    "imageAlt": "Screenshot of a wheel of fortune type quiz game",
    "info": "Approached with the mindset of mobile-first, this Javascript project is based upon the classic quiz game 'wheel of fortune'. It is a two player word guessing game, whereby highest score wins. Incorrect guesses and player turns are handled 'automatically' i.e. without user input. Players spin an animated wheel for points and guess letters via the projects purpose built keyboard.",
    "imageUrl": "/images/Quiz-laptop-screenshot.png",
    "isReversed": true,
    "techstackIcons": ["html5", "sass", "javascript"]
  },
  {
    "projectCodeUrl": "https://github.com/tonylubin/todos-app",
    "projectViewUrl": "https://mytodosapp-4e40f.firebaseapp.com/",
    "title": "MyTodos",
    "info": "An app for a user to keep track of tasks. Built with a connection to Firebase as a BaaS to allow CRUD operations, a user can write, update and delete a todo, as well as being able to show a todo as completed. Furthermore, authentication was added, thus to utilise the app a user must be registered/logged in. This is handled through login/registration form(s) using firebase auth.",
    "imageUrl": "/images/MyTodos-laptop-screenshot.png",
    "imageAlt": "Screenshot of a app that deals with todos",
    "isReversed": false,
    "techstackIcons": ["react", "firebase", "sass"]
  },
  {
    "projectCodeUrl": "https://github.com/tonylubin/JS---Morse-Code-Translator",
    "projectViewUrl": "https://tonylubin.github.io/JS---Morse-Code-Translator",
    "title": "Morse Code Translator",
    "imageAlt": "Screenshot of a Morse code translator application",
    "info": "Tasked with creating a translator app, which adopts an 'OOP' approach. Takes in user input for the translation between two languages => English/Morse code and vice-versa.",
    "imageUrl": "/images/Morse-code-laptop-screenshot.png",
    "isReversed": false,
    "techstackIcons": ["html5", "sass", "javascript"]
  },
  {
    "projectCodeUrl": "https://github.com/tonylubin/JS---Aliens-Game-OOP",
    "projectViewUrl": "https://tonylubin.github.io/JS---Aliens-Game-OOP",
    "title": "Alien BattleShips",
    "imageAlt": "Screenshot of BattleShips OOP Game",
    "info": "A minimalist/retro designed project, tasked to be written within 150 lines of code in Vanilla JS. Based around the classic battleships game and built according to the principles of the 'OOP' paradigm with added DOM manipulation. Created on a co-ordinated system using CSS Grid, targets hit are visualised by a 'flashing animation' and the game is over when the mothership is destroyed.",
    "imageUrl": "/images/Aliens-laptop-screenshot.png",
    "isReversed": true,
    "techstackIcons": ["html5", "sass", "javascript"]
  },
  {
    "projectCodeUrl": "https://github.com/tonylubin/JS---Calculator",
    "projectViewUrl": "https://tonylubin.github.io/JS---Calculator",
    "title": "JS Calculator",
    "imageAlt": "Screenshot of a JS Calculator App",
    "info": "A working calculator with addition, multiplication, subtraction, division and the added functionality of decimal points and percentages. The calculator has a 'clear' button to reset values and a 'backspace' button to delete the last value entered on screen. Designed in a neomorphic style using Sass, the Bem convention and written in vanilla Javascript.",
    "imageUrl": "/images/Calculator-laptop-screenshot.png",
    "isReversed": false,
    "techstackIcons": ["html5", "sass", "javascript"]
  }
]
